from snakemake.utils import min_version

##### set minimum snakemake version #####
min_version("6.4.1")

# this container defines the underlying OS for each job when using the workflow
# with --use-conda --use-singularity
#container: "docker://continuumio/miniconda3"
# workdir: config.get("workdir")

#define some global variables
base_ref=config.get('paths').get('base_ref') + "/" + config["ref"]["species"] + "/" + config["ref"]["build"] + "/" + str(config["ref"]["release"]) 
ref_genome=config["ref"]["species"] + "." + config["ref"]["build"] + "." + str(config["ref"]["release"]) + ".fasta"
ref_annots=config["ref"]["species"] + "." + config["ref"]["build"] + "." + str(config["ref"]["release"]) + ".gtf"

BASE_OUT=config.get("paths").get("base_out")
BASE_SCRIPTS=config.get("paths").get("base_scripts")
##### load rules #####
include: "rules/common.smk"
include: "rules/ref.smk"
# include: "rules/trim.smk"
include: "rules/align.smk"
# include: "rules/qc.smk"
# include: "rules/diffexp.smk"
include: "rules/countmatrix.smk"
# include: "rules/genotyping.smk"
sample_names = list(samples.sample_name)
unit_names = list(set(list(units.unit_name)))
print(sample_names)
print(unit_names)

##### target rules #####

rule all:
    input:
        # "resources/genome.fasta.fai",
        base_ref + "/" + ref_genome+".fai",
        expand(base_ref + "/" + ref_genome+".{ext}", ext=["amb", "ann", "bwt", "pac", "sa"]),
        directory(base_ref + "/star_genome"),
        expand(BASE_OUT + "/1.STAR_ALIGN/pe/{sample}-{unit}/Aligned.sortedByCoord.out.bam.bai",sample=sample_names,unit=unit_names),
        expand(BASE_OUT + "/1.STAR_ALIGN/pe/{sample}-{unit}/Aligned.toTranscriptome.out.bam.bai",sample=sample_names,unit=unit_names),
        expand(base_ref + "/RSEM/reference.{ext}", ext=["seq", "grp", "ti"]),
        expand(BASE_OUT+ "/2.RSEM/{sample}-{unit}.genes.results", sample=sample_names,unit=unit_names),
        expand(BASE_OUT+ "/2.RSEM/{sample}-{unit}.isoforms.results", sample=sample_names,unit=unit_names)
        # config.get("star").get("base_out") + "/1.STAR_ALIGN/pe/{sample}-{unit}/Aligned.sortedByCoord.out.bam",
        # config.get("star").get("base_out") + "/1.STAR_ALIGN/pe/{sample}-{unit}/Aligned.toTranscriptome.out.bam",
        # config.get("star").get("base_out") + "/1.STAR_ALIGN/pe/{sample}-{unit}/ReadsPerGene.out.tab",

        # "results/pca.pdf",
        # get_final_output(),
        # "results/counts/all_tpm.tsv",
        # "results/qc/multiqc_report.html",
